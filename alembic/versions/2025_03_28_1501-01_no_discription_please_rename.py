"""no_discription_please_rename

Revision ID: 01
Revises:
Create Date: 2025-03-28 15:01:08.009383

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '01'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('property_field',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('field_name', sa.String(), nullable=False),
    sa.Column('created_at', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('field_name'),
    sa.UniqueConstraint('id')
    )
    op.create_table('newslettertag',
    sa.Column('tag_id', sa.Integer(), nullable=False),
    sa.Column('newsletter_id', sa.Integer(), nullable=False),
    sa.Column('created_at', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.ForeignKeyConstraint(['newsletter_id'], ['newsletter.id'], ),
    sa.ForeignKeyConstraint(['tag_id'], ['tag.id'], ),
    sa.PrimaryKeyConstraint('tag_id', 'newsletter_id')
    )
    op.create_table('firework_property',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('field_id', sa.Integer(), nullable=False),
    sa.Column('value', sa.String(), nullable=False),
    sa.Column('firework_id', sa.Integer(), nullable=False),
    sa.Column('created_at', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.ForeignKeyConstraint(['field_id'], ['property_field.id'], ),
    sa.ForeignKeyConstraint(['firework_id'], ['firework.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('id')
    )
    op.add_column('firework', sa.Column('caliber', sa.String(), nullable=True))
    op.drop_constraint('firework_media_id_key', 'firework_media', type_='unique')
    op.drop_column('firework_media', 'id')
    op.drop_constraint('firework_tag_id_key', 'firework_tag', type_='unique')
    op.drop_column('firework_tag', 'id')
    op.add_column('newsletter', sa.Column('number_of_orders', sa.Integer(), nullable=False))
    op.add_column('newsletter', sa.Column('age_verified', sa.Boolean(), nullable=False))
    op.add_column('newsletter', sa.Column('canceled', sa.Boolean(), nullable=False))
    op.alter_column('user', 'telegram_id',
               existing_type=sa.BIGINT(),
               nullable=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.alter_column('user', 'telegram_id',
               existing_type=sa.BIGINT(),
               nullable=True)
    op.drop_column('newsletter', 'canceled')
    op.drop_column('newsletter', 'age_verified')
    op.drop_column('newsletter', 'number_of_orders')
    op.add_column('firework_tag', sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False))
    op.create_unique_constraint('firework_tag_id_key', 'firework_tag', ['id'])
    op.add_column('firework_media', sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False))
    op.create_unique_constraint('firework_media_id_key', 'firework_media', ['id'])
    op.drop_column('firework', 'caliber')
    op.drop_table('firework_property')
    op.drop_table('newslettertag')
    op.drop_table('property_field')
    # ### end Alembic commands ###
